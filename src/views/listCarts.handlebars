<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Lista carritos</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
        <style>
        .productos-container {
            max-height: 400px;
            overflow-y: auto;
        }
        .card{height: 300px;}
    </style>
</head>
<body>
    <div class="container">
        <div class="d-flex justify-content between align-items-center my-4">
            <h1>Mi carrito</h1>
            <h2 id="precioTotal"></h2>
        </div>
        <input hidden id="idCarrito" value="{{cartId}}"></input>
        <div id="carritos" class="productos-container"></div>
        <div id="volverRutas" class="my-4"></div>
        <div id="generarTicket" class="my-4"></div>
    </div>

    <script>
        const cartId = document.getElementById('idCarrito').value;

        async function cargarCarrito(cartId) {
            try {
               //Hacemos una solicitud GET a la ruta "/api/carts/:cid", donde cId es el cartId 
                const response = await fetch(`/api/carts/${cartId}`);

                if(!response.ok){
                    throw new Error("Error al obtener el carrito");
                }
                //Parseamos la respuesta a JSON
                const carrito = await response.json();            
                
                //Seleccionamos el contenedor donde quermos mostrar los productos.
                const contenedorCarritos = document.getElementById('carritos');
                contenedorCarritos.innerHTML = ' '; // Limpiamos el contenido anterior..

                //Calculamos el total del precio 
                let precioTotal = 0;


                //Creamos una tarjeta por cada productoi en el carrito
                carrito.forEach(item => {
                    const itemTotal = item.product.price * item.quantity;
                    precioTotal += itemTotal;

                    const productoDiv = document.createElement('div');
                    productoDiv.classList.add('card', 'my-3');
                    productoDiv.innerHTML = `
                            <div class="card-header">
                                Producto: ${item.product.titlte}
                            </div>
                            <div class="card-body">
                                <p> Precio Unitario: $${item.product.price}</p>
                                <p> Cantidad: ${item.product.quantity}</p>
                                <p> Total: $${itemTotal}</p>
                                <button class="btn btn-danger btn-sm" onClick="eliminarDelCarrito('${cartId}', '${item.product._id}')">Eliminar</button>
                            </div>
                    `;
                    //Añadimos la trarjeta del producto al contenedor
                    contenedorCarritos.appendChild(productoDiv);
                });
                //Mostramos el precio total al lado del titulo Mi Carrito
                document.getElementById('precioTotal').innerText = `Precio total: $${precioTotal}`;

                //Añadimos el boton para volver a las rutas y el enlace para ver productos
                const volverRutasDiv = document.getElementById('volverRutas');
                volverRutasDiv.innerHTML = `
                    <button class="btn btn-primary" onClick="window.location.href='/products'">Seccion de Productos</button>
                `;

                generarTicketDiv = document.getElementById('generarTicket');
                generarTicket.innerHTML = `
                <button class="btn btn-primary" onClick="window.location.href='/api/carts/${cartId}/purchase'">Generar Ticket</button>
                `;
            } catch (error) {
                console.error('Error interno del servidor', error);
            }   
        }

        async function eliminarDelCarrito(cartId, productId) {
            try {
               const response = await fetch(`/api/carts/${cartId}/product/${productId}`, {
                method: 'DELETE'
               });
               const result = await response.json();

               if(response.ok){
                alert('Producto eliminado del carrito exitosamente');
                cargarCarrito(cartId);
               } else {
                alert('Error al eliminar producto del carrito');
                console.error(result);
               }
            } catch (error) {
                console.error('Error al eliminar producto del carrito');
                alert('Error al eliminar producto del carrito');
            }
        }

        cargarCarrito(cartId);
    </script>
</body>
</html>